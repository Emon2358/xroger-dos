name: Build Xroger DOS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            nasm \
            dosfstools \
            mtools \
            genisoimage \
            wget \
            unzip \
            p7zip-full \
            qemu-utils \
            dosbox-x

      - name: Download FreeDOS LiveCD
        run: |
          wget https://www.ibiblio.org/pub/micro/pc-stuff/freedos/files/distributions/1.4/FD14-LiveCD.zip
          unzip FD14-LiveCD.zip

      - name: Assemble IPL (boot sector)
        run: |
          cat > ipl.asm << 'EOF'
          [BITS 16]
          [ORG 0x0]

          jmp short boot_start
          nop

          ; BIOS パラメータ ブロック (BPB)
          bpb:
            db "XROGDOS "       ; OEM ID
            dw 512              ; Bytes per sector
            db 1                ; Sectors per cluster
            dw 1                ; Reserved sectors
            db 2                ; Number of FATs
            dw 224              ; Root directory entries
            dw 2880             ; Total sectors
            db 0xF0             ; Media descriptor
            dw 9                ; Sectors per FAT
            dw 18               ; Sectors per track
            dw 2                ; Number of heads
            dd 0                ; Hidden sectors
            dd 0                ; Total sectors (large)
            db 0x80             ; Drive number
            db 0                ; Reserved
            db 0x29             ; Extended boot signature
            dd 0x12345678       ; Volume serial number
            db "XROGER-DOS "    ; Volume label
            db "FAT12   "       ; File system type

          sectors_per_track  dw 18
          heads              dw 2
          sectors_per_cluster db 1
          data_start         dw 33

          filename_kernel    db "KERNEL  SYS"
          msg_boot           db "Loading XROGER-DOS...",13,10,0
          msg_error          db "Boot error!",13,10,0

          ;---------------------------------------
          ; メイン ブート ローダー
          ;---------------------------------------
          boot_start:
            cli
            mov ax, 0x0000
            mov ss, ax
            mov sp, 0x7C00
            mov ds, ax
            mov es, ax
            sti

            mov ah, 0x00
            mov al, 0x00
            int 0x18

            mov si, msg_boot
            call print_string

            xor ax, ax
            mov dl, 0x80
            int 0x13
            jc error

            mov ax, 19
            mov bx, 0x8000
            mov cx, 14
            call read_sectors

            mov cx, 224
            mov di, 0x8000
          find_kernel:
            push cx
            mov cx, 11
            mov si, filename_kernel
            push di
            repe cmpsb
            pop di
            je found_kernel
            pop cx
            add di, 32
            loop find_kernel
            jmp error

          found_kernel:
            mov ax, [di+26]
            mov bx, 0x1000
            call load_file
            mov dl, 0x80
            jmp 0x0000:0x1000

          error:
            mov si, msg_error
            call print_string
            jmp $

          ;---------------------------------------
          ; サブルーチン群
          ;---------------------------------------
          read_sectors:
            push ax
            push bx
            push cx
          .loop_rs:
            push ax
            push cx
            ; LBA→CHS 変換
            xor dx, dx
            div word [sectors_per_track]
            inc dl
            mov cl, dl
            xor dx, dx
            div word [heads]
            mov dh, dl
            mov ch, al

            mov al, 1
            mov ah, 2
            mov dl, 0x80
            push cx
            int 0x13
            pop cx
            jc error

            pop cx
            pop ax
            add bx, 512
            inc ax
            loop .loop_rs

            pop cx
            pop bx
            pop ax
            ret

          load_file:
            push ax
            push bx
          .load_cluster:
            push ax
            sub ax, 2
            xor dx, dx
            mov cx, [sectors_per_cluster]
            mul cx
            add ax, [data_start]

            mov cx, [sectors_per_cluster]
            call read_sectors

            pop ax
            push bx
            mov bx, 0x7E00
            push ax
            shr ax, 1
            add bx, ax
            mov ax, [bx]
            pop bx

            test bx, 1
            jz .even_cluster
          .odd_cluster:
            shr ax, 4
            jmp .check_end
          .even_cluster:
            and ax, 0x0FFF
          .check_end:
            cmp ax, 0x0FF8
            jae .done
            add bx, 512
            jmp .load_cluster
          .done:
            pop bx
            pop ax
            ret

          print_string:
            lodsb
            or al, al
            jz .ps_done
            mov ah, 0x0A
            int 0x18
            jmp print_string
          .ps_done:
            ret

          times 510-($-$$) db 0
          dw 0xAA55
          EOF

          nasm -f bin -o ipl.bin ipl.asm

      - name: Create & format PC‑98 HDD image (fast)
        run: |
          # 1) mkfs.fat -C で直接 2880セクタ (1.44MiB) の FAT12 イメージを生成
          mkfs.fat -F12 -n XROGER-DOS -C xroger.hdi 2880
          # 2) カスタム IPL を先頭セクタに上書き
          dd if=ipl.bin of=xroger.hdi conv=notrunc bs=512 count=1

      - name: Mount, copy FreeDOS files, and finalize
        run: |
          mkdir -p hdi_mount iso_mount
          sudo mount -o loop xroger.hdi hdi_mount
          sudo mount -o loop FD14LIVE.iso iso_mount

          echo "Copying system files..."
          for file in KERNEL.SYS COMMAND.COM FDCONFIG.SYS IO.SYS MSDOS.SYS; do
            sudo find iso_mount -iname "$file" -exec cp {} hdi_mount/ \; || true
          done

          sudo mkdir -p hdi_mount/DOS
          for file in HIMEM.SYS EMM386.EXE FDOS.SYS; do
            sudo find iso_mount -iname "$file" -exec cp {} hdi_mount/DOS/ \; || true
          done

          cat > config.sys << EOS
          DEVICE=DOS\HIMEM.SYS
          DOS=HIGH
          FILES=40
          BUFFERS=40
          SHELL=COMMAND.COM /P /E:512
          EOS
          sudo cp config.sys hdi_mount/CONFIG.SYS

          cat > autoexec.bat << EOS
          @ECHO OFF
          SET PATH=C:\;C:\DOS
          PROMPT $P$G
          EOS
          sudo cp autoexec.bat hdi_mount/AUTOEXEC.BAT

          cat > README.txt << EOS
          XROGER DOS HDDイメージ
          作成日時: 2025-07-18 16:31:17 (UTC)
          作成者: Emon2358

          【注意事項】
          ・このHDDイメージはFreeDOS(98)が起動する状態に設定されています。
          ・作成の段階でHDDのフォーマットのみMS-DOSを使用していますが、
            イメージにはMS-DOSのデータが含まれないため配布に問題ないものとしています。

          【免責事項】
          ・このHDDイメージを利用し発生したいかなる事象も関知いたしません。
          ・すべて自身の責任においてご利用ください。
          ・問い合わせも不可とさせていただきます。
          EOS
          sudo cp README.txt hdi_mount/

          sudo umount iso_mount hdi_mount
          rm -rf iso_mount hdi_mount FD14LIVE.iso config.sys autoexec.bat

      - name: Upload HDI & README
        uses: actions/upload-artifact@v4
        with:
          name: xroger-dos
          path: |
            xroger.hdi
            README.txt

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/heads/main')
        with:
          files: |
            xroger.hdi
            README.txt
          name: Xroger DOS Release
          body_path: README.txt
          tag_name: v1.0.${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
